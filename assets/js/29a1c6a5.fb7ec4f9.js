"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7091],{3905:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>f});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),s=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},d=function(e){var n=s(e.components);return t.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(r),f=a,v=p["".concat(c,".").concat(f)]||p[f]||u[f]||o;return r?t.createElement(v,i(i({ref:n},d),{},{components:r})):t.createElement(v,i({ref:n},d))}));function f(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},27537:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var t=r(87462),a=(r(67294),r(3905));const o={},i="\u4e0d\u540c\u7684\u4e8c\u53c9\u641c\u7d22\u6811 II",l={unversionedId:"Java/leetcode/src/BinaryTree/\u4e0d\u540c\u7684\u4e8c\u53c9\u641c\u7d22\u6811 II",id:"Java/leetcode/src/BinaryTree/\u4e0d\u540c\u7684\u4e8c\u53c9\u641c\u7d22\u6811 II",title:"\u4e0d\u540c\u7684\u4e8c\u53c9\u641c\u7d22\u6811 II",description:"https://leetcode-cn.com/problems/unique-binary-search-trees-ii/",source:"@site/docs/Java/leetcode/src/BinaryTree/95-\u4e0d\u540c\u7684\u4e8c\u53c9\u641c\u7d22\u6811 II.md",sourceDirName:"Java/leetcode/src/BinaryTree",slug:"/Java/leetcode/src/BinaryTree/\u4e0d\u540c\u7684\u4e8c\u53c9\u641c\u7d22\u6811 II",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/BinaryTree/\u4e0d\u540c\u7684\u4e8c\u53c9\u641c\u7d22\u6811 II",draft:!1,editUrl:"https://github.com/zhiyu1998/Computer-Science-Learn-Notes/edit/master/docs/Java/leetcode/src/BinaryTree/95-\u4e0d\u540c\u7684\u4e8c\u53c9\u641c\u7d22\u6811 II.md",tags:[],version:"current",sidebarPosition:95,frontMatter:{},sidebar:"sidebars",previous:{title:"\u4e8c\u53c9\u6811\u7684\u904d\u5386",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/BinaryTree/\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386"},next:{title:"\u4e0d\u540c\u7684\u4e8c\u53c9\u641c\u7d22\u6811",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/BinaryTree/\u4e0d\u540c\u7684\u4e8c\u53c9\u641c\u7d22\u6811"}},c={},s=[{value:"\u95ee\u9898\u63cf\u8ff0",id:"\u95ee\u9898\u63cf\u8ff0",level:2},{value:"Java",id:"java",level:2},{value:"\u5206\u6cbb",id:"\u5206\u6cbb",level:3},{value:"\u5c0f\u7ed3",id:"\u5c0f\u7ed3",level:2},{value:"\u5b98\u65b9\u601d\u8def",id:"\u5b98\u65b9\u601d\u8def",level:3},{value:"\u6211\u7684\u601d\u8def\uff08\u5f85\u6574\u7406\uff09",id:"\u6211\u7684\u601d\u8def\u5f85\u6574\u7406",level:3}],d={toc:s};function u(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u4e0d\u540c\u7684\u4e8c\u53c9\u641c\u7d22\u6811-ii"},"\u4e0d\u540c\u7684\u4e8c\u53c9\u641c\u7d22\u6811 II"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/unique-binary-search-trees-ii/"},"https://leetcode-cn.com/problems/unique-binary-search-trees-ii/")),(0,a.kt)("h2",{id:"\u95ee\u9898\u63cf\u8ff0"},"\u95ee\u9898\u63cf\u8ff0"),(0,a.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 n \uff0c\u8bf7\u4f60\u751f\u6210\u5e76\u8fd4\u56de\u6240\u6709\u7531 n \u4e2a\u8282\u70b9\u7ec4\u6210\u4e14\u8282\u70b9\u503c\u4ece 1 \u5230 n \u4e92\u4e0d\u76f8\u540c\u7684\u4e0d\u540c \u4e8c\u53c9\u641c\u7d22\u6811 \u3002\u53ef\u4ee5\u6309 \u4efb\u610f\u987a\u5e8f \u8fd4\u56de\u7b54\u6848\u3002"),(0,a.kt)("h2",{id:"java"},"Java"),(0,a.kt)("h3",{id:"\u5206\u6cbb"},"\u5206\u6cbb"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u5c06 \u8fde\u7eed\u7684\u6570\uff0c\u4e00\u4e2a\u4e2a\u904d\u5386\uff0c\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\n\u6bcf\u6b21\u904d\u5386\u4e2d\uff0c\u5c06 \u5de6\u8fb9\u7684\u6570\u7ec4 \u548c \u53f3\u8fb9\u7684\u6570\u7ec4 \u5206\u522b\u8fdb\u884c\u6784\u5efa\u5b50\u6811\uff0c\u5e76\u63a5\u5230 \u5f53\u524d\u6839\u8282\u70b9\u4e0a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"import javax.swing.tree.TreeNode;\nimport java.util.ArrayList;\n\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<TreeNode> generateTrees(int n) {\n        if (n == 0)\n            return new ArrayList<TreeNode>();\n        return generate(1, n);\n    }\n\n    private List<TreeNode> generate(int start, int end) {\n        List<TreeNode> res = new ArrayList<>();\n        //\u6b64\u65f6\u6ca1\u6709\u6570\u5b57\uff0c\u5c06 null \u52a0\u5165\u7ed3\u679c\u4e2d\n        if (start > end) {\n            res.add(null);\n            return res;\n        }\n        //\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\uff0c\u5f53\u524d\u6570\u5b57\u4f5c\u4e3a\u4e00\u68f5\u6811\u52a0\u5165\u7ed3\u679c\u4e2d\n        if (start == end) {\n            TreeNode node = new TreeNode(start);\n            res.add(node);\n            return res;\n        }\n\n        //\u5c1d\u8bd5\u6bcf\u4e2a\u6570\u5b57\u4f5c\u4e3a\u6839\u8282\u70b9\n        for (int i = start; i <= end; i++) {\n            // \u5de6\u5b50\u6811\n            List<TreeNode> left_tree = generate(start, i - 1);\n\n            // \u53f3\u5b50\u6811\n            List<TreeNode> right_tree = generate(i + 1, end);\n            // \u5de6\u5b50\u6811\u53f3\u5b50\u6811\u4e24\u4e24\u7ec4\u5408\n            for (TreeNode l : left_tree) {\n                for (TreeNode r : right_tree) {\n                    TreeNode node = new TreeNode(i);\n                    node.left = l;\n                    node.right = r;\n                    res.add(node);\n                }\n            }\n        }\n\n        return res;\n    }\n}\n")),(0,a.kt)("h2",{id:"\u5c0f\u7ed3"},"\u5c0f\u7ed3"),(0,a.kt)("h3",{id:"\u5b98\u65b9\u601d\u8def"},"\u5b98\u65b9\u601d\u8def"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u4e00\u4e0b\u67e5\u627e\u4e8c\u53c9\u6811\u7684\u6027\u8d28\u3002\u5de6\u5b50\u6811\u7684\u6240\u6709\u503c\u5c0f\u4e8e\u6839\u8282\u70b9\uff0c\u53f3\u5b50\u6811\u7684\u6240\u6709\u503c\u5927\u4e8e\u6839\u8282\u70b9\u3002\n\n\u6240\u4ee5\u5982\u679c\u6c42 1...n \u7684\u6240\u6709\u53ef\u80fd\u3002\n\n\u6211\u4eec\u53ea\u9700\u8981\u628a 1 \u4f5c\u4e3a\u6839\u8282\u70b9\uff0c[ ] \u7a7a\u4f5c\u4e3a\u5de6\u5b50\u6811\uff0c[ 2 ... n ] \u7684\u6240\u6709\u53ef\u80fd\u4f5c\u4e3a\u53f3\u5b50\u6811\u3002\n\n2 \u4f5c\u4e3a\u6839\u8282\u70b9\uff0c[ 1 ] \u4f5c\u4e3a\u5de6\u5b50\u6811\uff0c[ 3...n ] \u7684\u6240\u6709\u53ef\u80fd\u4f5c\u4e3a\u53f3\u5b50\u6811\u3002\n\n3 \u4f5c\u4e3a\u6839\u8282\u70b9\uff0c[ 1 2 ] \u7684\u6240\u6709\u53ef\u80fd\u4f5c\u4e3a\u5de6\u5b50\u6811\uff0c[ 4 ... n ] \u7684\u6240\u6709\u53ef\u80fd\u4f5c\u4e3a\u53f3\u5b50\u6811\uff0c\u7136\u540e\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u4e24\u4e24\u7ec4\u5408\u3002\n\n4 \u4f5c\u4e3a\u6839\u8282\u70b9\uff0c[ 1 2 3 ] \u7684\u6240\u6709\u53ef\u80fd\u4f5c\u4e3a\u5de6\u5b50\u6811\uff0c[ 5 ... n ] \u7684\u6240\u6709\u53ef\u80fd\u4f5c\u4e3a\u53f3\u5b50\u6811\uff0c\u7136\u540e\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u4e24\u4e24\u7ec4\u5408\u3002\n\n...\n\nn \u4f5c\u4e3a\u6839\u8282\u70b9\uff0c[ 1... n ] \u7684\u6240\u6709\u53ef\u80fd\u4f5c\u4e3a\u5de6\u5b50\u6811\uff0c[ ] \u4f5c\u4e3a\u53f3\u5b50\u6811\u3002\n\n\u81f3\u4e8e\uff0c[ 2 ... n ] \u7684\u6240\u6709\u53ef\u80fd\u4ee5\u53ca [ 4 ... n ] \u4ee5\u53ca\u5176\u4ed6\u60c5\u51b5\u7684\u6240\u6709\u53ef\u80fd\uff0c\u53ef\u4ee5\u5229\u7528\u4e0a\u8fb9\u7684\u65b9\u6cd5\uff0c\u628a\u6bcf\u4e2a\u6570\u5b57\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u7136\u540e\u628a\u6240\u6709\u53ef\u80fd\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7ec4\u5408\u8d77\u6765\u5373\u53ef\u3002\n\n\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\uff0c\u90a3\u4e48\u6240\u6709\u53ef\u80fd\u5c31\u662f\u4e00\u79cd\u60c5\u51b5\uff0c\u628a\u8be5\u6570\u5b57\u4f5c\u4e3a\u4e00\u68f5\u6811\u3002\u800c\u5982\u679c\u662f [ ]\uff0c\u90a3\u5c31\u8fd4\u56de null\u3002\n")),(0,a.kt)("h3",{id:"\u6211\u7684\u601d\u8def\u5f85\u6574\u7406"},"\u6211\u7684\u601d\u8def\uff08\u5f85\u6574\u7406\uff09"))}u.isMDXComponent=!0}}]);