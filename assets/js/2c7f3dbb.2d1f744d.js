"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6905],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(r),m=a,f=d["".concat(c,".").concat(m)]||d[m]||s[m]||o;return r?n.createElement(f,l(l({ref:t},p),{},{components:r})):n.createElement(f,l({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},15723:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var n=r(87462),a=(r(67294),r(3905));const o={},l="\u5e73\u8861\u4e8c\u53c9\u6811",i={unversionedId:"Java/leetcode/src/BinaryTree/\u5e73\u8861\u4e8c\u53c9\u6811",id:"Java/leetcode/src/BinaryTree/\u5e73\u8861\u4e8c\u53c9\u6811",title:"\u5e73\u8861\u4e8c\u53c9\u6811",description:"https://leetcode-cn.com/problems/balanced-binary-tree/",source:"@site/docs/Java/leetcode/src/BinaryTree/110-\u5e73\u8861\u4e8c\u53c9\u6811.md",sourceDirName:"Java/leetcode/src/BinaryTree",slug:"/Java/leetcode/src/BinaryTree/\u5e73\u8861\u4e8c\u53c9\u6811",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/BinaryTree/\u5e73\u8861\u4e8c\u53c9\u6811",draft:!1,editUrl:"https://github.com/zhiyu1998/Computer-Science-Learn-Notes/edit/master/docs/Java/leetcode/src/BinaryTree/110-\u5e73\u8861\u4e8c\u53c9\u6811.md",tags:[],version:"current",sidebarPosition:110,frontMatter:{},sidebar:"sidebars",previous:{title:"\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/BinaryTree/\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811"},next:{title:"\u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/BinaryTree/\u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6"}},c={},u=[{value:"\u95ee\u9898\u63cf\u8ff0",id:"\u95ee\u9898\u63cf\u8ff0",level:2},{value:"\u7b2c\u4e00\u60f3\u6cd5\uff1a\u540e\u5e8f\u904d\u5386+\u5224\u65ad",id:"\u7b2c\u4e00\u60f3\u6cd5\u540e\u5e8f\u904d\u5386\u5224\u65ad",level:2},{value:"\u4e00\u5e74\u524d\u5199\u7684\u60f3\u6cd5\uff0c\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u60f3\u7684\uff0c\u5f88\u7cbe\u7b80",id:"\u4e00\u5e74\u524d\u5199\u7684\u60f3\u6cd5\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u60f3\u7684\u5f88\u7cbe\u7b80",level:2}],p={toc:u};function s(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u5e73\u8861\u4e8c\u53c9\u6811"},"\u5e73\u8861\u4e8c\u53c9\u6811"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/balanced-binary-tree/"},"https://leetcode-cn.com/problems/balanced-binary-tree/")),(0,a.kt)("h2",{id:"\u95ee\u9898\u63cf\u8ff0"},"\u95ee\u9898\u63cf\u8ff0"),(0,a.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u5224\u65ad\u5b83\u662f\u5426\u662f\u9ad8\u5ea6\u5e73\u8861\u7684\u4e8c\u53c9\u6811\u3002"),(0,a.kt)("p",null,"\u672c\u9898\u4e2d\uff0c\u4e00\u68f5\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u6811\u5b9a\u4e49\u4e3a\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u4e00\u4e2a\u4e8c\u53c9\u6811\u6bcf\u4e2a\u8282\u70b9 \u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 1 \u3002\n")),(0,a.kt)("h2",{id:"\u7b2c\u4e00\u60f3\u6cd5\u540e\u5e8f\u904d\u5386\u5224\u65ad"},"\u7b2c\u4e00\u60f3\u6cd5\uff1a\u540e\u5e8f\u904d\u5386+\u5224\u65ad"),(0,a.kt)("p",null,"\u9012\u5f52\u8fd4\u56de\u503c\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5f53\u8282\u70b9root \u5de6 / \u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee <2 \uff1a\u5219\u8fd4\u56de\u4ee5\u8282\u70b9root\u4e3a\u6839\u8282\u70b9\u7684\u5b50\u6811\u7684\u6700\u5927\u9ad8\u5ea6\uff0c\u5373\u8282\u70b9 root \u7684\u5de6\u53f3\u5b50\u6811\u4e2d\u6700\u5927\u9ad8\u5ea6\u52a0 1 \uff08 max(left, right) + 1 \uff09\uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u5f53\u8282\u70b9root \u5de6 / \u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee \u22652 \uff1a\u5219\u8fd4\u56de \u22121 \uff0c\u4ee3\u8868 \u6b64\u5b50\u6811\u4e0d\u662f\u5e73\u8861\u6811 \u3002")),(0,a.kt)("p",null,"\u9012\u5f52\u7ec8\u6b62\u6761\u4ef6\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5f53\u8d8a\u8fc7\u53f6\u5b50\u8282\u70b9\u65f6\uff0c\u8fd4\u56de\u9ad8\u5ea6 0 \uff1b"),(0,a.kt)("li",{parentName:"ul"},"\u5f53\u5de6\uff08\u53f3\uff09\u5b50\u6811\u9ad8\u5ea6 left== -1 \u65f6\uff0c\u4ee3\u8868\u6b64\u5b50\u6811\u7684 \u5de6\uff08\u53f3\uff09\u5b50\u6811 \u4e0d\u662f\u5e73\u8861\u6811\uff0c\u56e0\u6b64\u76f4\u63a5\u8fd4\u56de \u22121\uff1b")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isBalanced(TreeNode root) {\n        if (root == null) {\n            return true;\n        }\n        return treeHeight(root) != -1;\n    }\n\n    private int treeHeight(TreeNode root) {\n        if (root == null) return 0;\n\n        if (root.left == null && root.right == null)\n            return 1;\n\n        int l = treeHeight(root.left);\n\n        int r = treeHeight(root.right);\n\n        if (l == -1 || r == -1)\n            return -1;\n\n        if (l == 0)\n            return r > 1 ? -1 : r + 1;\n        \n        if (r == 0)\n            return l > 1 ? -1 : l + 1;\n\n        // l != 0 && r != 0\n        return Math.abs(l - r) > 1 ? -1 : Math.max(l, r) + 1;\n    }\n}\n")),(0,a.kt)("blockquote",null,(0,a.kt)("h2",{parentName:"blockquote",id:"accepted"},"Accepted"),(0,a.kt)("ul",{parentName:"blockquote"},(0,a.kt)("li",{parentName:"ul"},"228/228 cases passed (0 ms)"),(0,a.kt)("li",{parentName:"ul"},"Your runtime beats 100 % of java submissions"),(0,a.kt)("li",{parentName:"ul"},"Your memory usage beats 50.88 % of java submissions (40.9 MB)"))),(0,a.kt)("h2",{id:"\u4e00\u5e74\u524d\u5199\u7684\u60f3\u6cd5\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u60f3\u7684\u5f88\u7cbe\u7b80"},"\u4e00\u5e74\u524d\u5199\u7684\u60f3\u6cd5\uff0c\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u60f3\u7684\uff0c\u5f88\u7cbe\u7b80"),(0,a.kt)("p",null,"\u81ea\u5e95\u5411\u4e0a\u9012\u5f52\u7684\u505a\u6cd5\u7c7b\u4f3c\u4e8e\u540e\u5e8f\u904d\u5386\uff0c\u5bf9\u4e8e\u5f53\u524d\u904d\u5386\u5230\u7684\u8282\u70b9\uff0c\u5148\u9012\u5f52\u5730\u5224\u65ad\u5176\u5de6\u53f3\u5b50\u6811\u662f\u5426\u5e73\u8861\uff0c\u518d\u5224\u65ad\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u662f\u5426\u5e73\u8861\u3002\u5982\u679c\u4e00\u68f5\u5b50\u6811\u662f\u5e73\u8861\u7684\uff0c\u5219\u8fd4\u56de\u5176\u9ad8\u5ea6\uff08\u9ad8\u5ea6\u4e00\u5b9a\u662f\u975e\u8d1f\u6574\u6570\uff09\uff0c\u5426\u5219\u8fd4\u56de \u22121-1\u22121\u3002\u5982\u679c\u5b58\u5728\u4e00\u68f5\u5b50\u6811\u4e0d\u5e73\u8861\uff0c\u5219\u6574\u4e2a\u4e8c\u53c9\u6811\u4e00\u5b9a\u4e0d\u5e73\u8861\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int height(TreeNode root) {\n        if (root == null) {\n            return 0;\n        }\n        int lh = height(root.left);\n        int rh = height(root.right);\n        if (lh == -1 || rh == -1 || Math.abs(lh - rh) > 1)\n            return -1;\n        else {\n            return Math.max(lh, rh) + 1;\n        }\n    }\n\n    public boolean isBalanced(TreeNode root) {\n        return height(root) >= 0;\n    }\n}\n\n")),(0,a.kt)("blockquote",null,(0,a.kt)("h3",{parentName:"blockquote",id:"\u63d0\u4ea4\u8bb0\u5f55"},"\u63d0\u4ea4\u8bb0\u5f55"),(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"228 / 228")," \u4e2a\u901a\u8fc7\u6d4b\u8bd5\u7528\u4f8b"),(0,a.kt)("p",{parentName:"blockquote"},"\u72b6\u6001\uff1a",(0,a.kt)("em",{parentName:"p"},"\u901a\u8fc7")),(0,a.kt)("p",{parentName:"blockquote"},"\u6267\u884c\u7528\u65f6: ",(0,a.kt)("strong",{parentName:"p"},"1 ms")),(0,a.kt)("p",{parentName:"blockquote"},"\u5185\u5b58\u6d88\u8017: ",(0,a.kt)("strong",{parentName:"p"},"38.5 MB"))))}s.isMDXComponent=!0}}]);