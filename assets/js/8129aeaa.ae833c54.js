"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8168],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>m});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),s=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=s(e.components);return n.createElement(l.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=s(t),m=o,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return t?n.createElement(f,i(i({ref:r},u),{},{components:t})):n.createElement(f,i({ref:r},u))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=p;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},16713:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var n=t(87462),o=(t(67294),t(3905));const a={},i="\u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811",c={unversionedId:"Java/leetcode/src/BinaryTree/\u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811",id:"Java/leetcode/src/BinaryTree/\u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811",title:"\u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811",description:"https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/",source:"@site/docs/Java/leetcode/src/BinaryTree/108-\u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811.md",sourceDirName:"Java/leetcode/src/BinaryTree",slug:"/Java/leetcode/src/BinaryTree/\u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/BinaryTree/\u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811",draft:!1,editUrl:"https://github.com/zhiyu1998/Computer-Science-Learn-Notes/edit/master/docs/Java/leetcode/src/BinaryTree/108-\u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811.md",tags:[],version:"current",sidebarPosition:108,frontMatter:{},sidebar:"sidebars",previous:{title:"\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386 II",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/BinaryTree/\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386 II"},next:{title:"\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/BinaryTree/\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811"}},l={},s=[{value:"\u95ee\u9898\u63cf\u8ff0",id:"\u95ee\u9898\u63cf\u8ff0",level:2},{value:"\u7b2c\u4e00\u60f3\u6cd5\uff1a\u9012\u5f52",id:"\u7b2c\u4e00\u60f3\u6cd5\u9012\u5f52",level:2}],u={toc:s};function d(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811"},"\u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/"},"https://leetcode-cn.com/problems/convert-sorted-array-to-binary-search-tree/")),(0,o.kt)("h2",{id:"\u95ee\u9898\u63cf\u8ff0"},"\u95ee\u9898\u63cf\u8ff0"),(0,o.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \uff0c\u5176\u4e2d\u5143\u7d20\u5df2\u7ecf\u6309 \u5347\u5e8f \u6392\u5217\uff0c\u8bf7\u4f60\u5c06\u5176\u8f6c\u6362\u4e3a\u4e00\u68f5 \u9ad8\u5ea6\u5e73\u8861 \u4e8c\u53c9\u641c\u7d22\u6811\u3002"),(0,o.kt)("p",null,"\u9ad8\u5ea6\u5e73\u8861 \u4e8c\u53c9\u6811\u662f\u4e00\u68f5\u6ee1\u8db3\u300c\u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u7684\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc7 1 \u300d\u7684\u4e8c\u53c9\u6811\u3002"),(0,o.kt)("h2",{id:"\u7b2c\u4e00\u60f3\u6cd5\u9012\u5f52"},"\u7b2c\u4e00\u60f3\u6cd5\uff1a\u9012\u5f52"),(0,o.kt)("p",null,"BST\u7684\u4e2d\u5e8f\u904d\u5386\u662f\u5347\u5e8f\u7684\uff0c\u56e0\u6b64\u672c\u9898\u7b49\u540c\u4e8e\u6839\u636e\u4e2d\u5e8f\u904d\u5386\u7684\u5e8f\u5217\u6062\u590d\u4e8c\u53c9\u641c\u7d22\u6811\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u4ee5\u5347\u5e8f\u5e8f\u5217\u4e2d\u7684\u4efb\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u6839\u8282\u70b9\uff0c\u4ee5\u8be5\u5143\u7d20\u5de6\u8fb9\u7684\u5347\u5e8f\u5e8f\u5217\u6784\u5efa\u5de6\u5b50\u6811\uff0c\u4ee5\u8be5\u5143\u7d20\u53f3\u8fb9\u7684\u5347\u5e8f\u5e8f\u5217\u6784\u5efa\u53f3\u5b50\u6811\uff0c\u8fd9\u6837\u5f97\u5230\u7684\u6811\u5c31\u662f\u4e00\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\u3002"),(0,o.kt)("p",null," \u53c8\u56e0\u4e3a\u672c\u9898\u8981\u6c42\u9ad8\u5ea6\u5e73\u8861\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u9009\u62e9\u5347\u5e8f\u5e8f\u5217\u7684\u4e2d\u95f4\u5143\u7d20\u4f5c\u4e3a\u6839\u8282\u70b9"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n   public TreeNode sortedArrayToBST(int[] nums) {\n\n        return build(nums, 0, nums.length - 1);\n    }\n\n    private TreeNode build(int[] nums, int start, int end) {\n\n        if (start > end)\n            return null;\n        \n        int rootIndex = (start + end + 1) / 2;\n        \n        TreeNode root = new TreeNode(nums[rootIndex]);\n        \n        root.left = build(nums, start, rootIndex - 1);\n        root.right = build(nums, rootIndex + 1, end);\n\n        return root;\n    }\n}\n")))}d.isMDXComponent=!0}}]);