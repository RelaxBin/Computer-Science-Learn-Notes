"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8888],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(t),g=a,m=d["".concat(c,".").concat(g)]||d[g]||u[g]||o;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},18956:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=t(87462),a=(t(67294),t(3905));const o={},i="SpringBoot\u6574\u5408\u5176\u4ed6\u6846\u67b6\u5408\u96c6",s={unversionedId:"Java/integration/main",id:"Java/integration/main",title:"SpringBoot\u6574\u5408\u5176\u4ed6\u6846\u67b6\u5408\u96c6",description:"\u7531\u4e8e\u4e00\u4e9b\u6846\u67b6\u6574\u5408\u8fd8\u8981\u4e34\u65f6\u53bb\u641c\u7d22\uff0c\u73b0\u6709\u7684GitHub\u4e5f\u6709\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u662f\u6709\u4e9b\u65b9\u6848\u8fc7\u4e8e\u9488\u5bf9\u6027\u95ee\u9898\uff0c\u5c5e\u4e8e\u53c2\u8003\u6027\u6587\u7ae0\uff0c\u8fd9\u5c31\u9700\u8981\u6cdb\u5316\u4e00\u4e0b\u5185\u5bb9\uff0c\u5c31\u8bb0\u5f55\u4e00\u4e0bSpringBoot\u662f\u5982\u4f55\u6574\u5408\u5176\u4ed6\u6846\u67b6\u7684\uff0c\u65b9\u4fbf\u4ee5\u540e\u5de5\u4f5c\u76f4\u63a5\u67e5\u9605\u4f7f\u7528\uff0c\u540e\u7eed\u8fd8\u4f1a\u6839\u636e\u95ee\u9898\u518d\u8fdb\u884c\u6539\u5584\u6587\u6863",source:"@site/docs/Java/integration/main.md",sourceDirName:"Java/integration",slug:"/Java/integration/main",permalink:"/Computer-Science-Learn-Notes/docs/Java/integration/main",draft:!1,editUrl:"https://github.com/zhiyu1998/Computer-Science-Learn-Notes/edit/master/docs/Java/integration/main.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebars",previous:{title:"docker",permalink:"/Computer-Science-Learn-Notes/docs/Java/docker/main"},next:{title:"kotlin",permalink:"/Computer-Science-Learn-Notes/docs/Java/kotlin/"}},c={},l=[{value:"RabbitMQ",id:"rabbitmq",level:2},{value:"\u5bfc\u5165POM",id:"\u5bfc\u5165pom",level:3},{value:"\u914d\u7f6e\u7c7b",id:"\u914d\u7f6e\u7c7b",level:3},{value:"\u6a21\u677f\uff1a\u5c01\u88c5\u7c7b",id:"\u6a21\u677f\u5c01\u88c5\u7c7b",level:3},{value:"RocketMQ",id:"rocketmq",level:2},{value:"\u5bfc\u5165POM",id:"\u5bfc\u5165pom-1",level:3},{value:"\u914d\u7f6e\u7c7b",id:"\u914d\u7f6e\u7c7b-1",level:3},{value:"\u5c01\u88c5\uff1aRocketMQ\u5de5\u5177\u7c7b",id:"\u5c01\u88c5rocketmq\u5de5\u5177\u7c7b",level:3},{value:"WebSocket",id:"websocket",level:2},{value:"\u5bfc\u5165POM",id:"\u5bfc\u5165pom-2",level:3},{value:"\u914d\u7f6e",id:"\u914d\u7f6e",level:3},{value:"\u521b\u5efa\u670d\u52a1",id:"\u521b\u5efa\u670d\u52a1",level:3},{value:"\u89e3\u51b3\u65b9\u6848\uff1a\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587",id:"\u89e3\u51b3\u65b9\u6848\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587",level:3},{value:"\u4f18\u5316\uff1aMQ\u524a\u5cf0\u586b\u8c37",id:"\u4f18\u5316mq\u524a\u5cf0\u586b\u8c37",level:3}],p={toc:l};function u(e){let{components:n,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"springboot\u6574\u5408\u5176\u4ed6\u6846\u67b6\u5408\u96c6"},"SpringBoot\u6574\u5408\u5176\u4ed6\u6846\u67b6\u5408\u96c6"),(0,a.kt)("p",null,"\u7531\u4e8e\u4e00\u4e9b\u6846\u67b6\u6574\u5408\u8fd8\u8981\u4e34\u65f6\u53bb\u641c\u7d22\uff0c\u73b0\u6709\u7684GitHub\u4e5f\u6709\u89e3\u51b3\u65b9\u6848\uff0c\u4f46\u662f\u6709\u4e9b\u65b9\u6848\u8fc7\u4e8e\u9488\u5bf9\u6027\u95ee\u9898\uff0c\u5c5e\u4e8e\u53c2\u8003\u6027\u6587\u7ae0\uff0c\u8fd9\u5c31\u9700\u8981\u6cdb\u5316\u4e00\u4e0b\u5185\u5bb9\uff0c\u5c31\u8bb0\u5f55\u4e00\u4e0bSpringBoot\u662f\u5982\u4f55\u6574\u5408\u5176\u4ed6\u6846\u67b6\u7684\uff0c\u65b9\u4fbf\u4ee5\u540e\u5de5\u4f5c\u76f4\u63a5\u67e5\u9605\u4f7f\u7528\uff0c\u540e\u7eed\u8fd8\u4f1a\u6839\u636e\u95ee\u9898\u518d\u8fdb\u884c\u6539\u5584\u6587\u6863"),(0,a.kt)("h2",{id:"rabbitmq"},"RabbitMQ"),(0,a.kt)("h3",{id:"\u5bfc\u5165pom"},"\u5bfc\u5165POM"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>com.rabbitmq</groupId>\n    <artifactId>amqp-client</artifactId>\n    <version>5.9.0</version>\n</dependency>\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-amqp</artifactId>\n</dependency>\n")),(0,a.kt)("h3",{id:"\u914d\u7f6e\u7c7b"},"\u914d\u7f6e\u7c7b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Configuration\npublic class RabbitMQConfig {\n    @Bean\n    public ConnectionFactory getFactory() {\n        ConnectionFactory factory = new ConnectionFactory();\n        factory.setHost("192.168.99.101"); //Linux\u4e3b\u673a\u7684IP\u5730\u5740\n        factory.setPort(5672); //RabbitMQ\u7aef\u53e3\u53f7\n        return factory;\n    }\n}\n')),(0,a.kt)("h3",{id:"\u6a21\u677f\u5c01\u88c5\u7c7b"},"\u6a21\u677f\uff1a\u5c01\u88c5\u7c7b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Slf4j\n@Component\npublic class MessageTask {\n    @Autowired\n    private ConnectionFactory factory;\n    @Autowired\n    private MessageService messageService;\n\n    /**\n     * \u540c\u6b65\u53d1\u9001\u6d88\u606f\n     *\n     * @param topic  \u4e3b\u9898\n     * @param entity \u6d88\u606f\u5bf9\u8c61\n     */\n    public void send(String topic, MessageEntity entity) {\n        String id = messageService.insertMessage(entity); //\u5411MongoDB\u4fdd\u5b58\u6d88\u606f\u6570\u636e\uff0c\u8fd4\u56de\u6d88\u606fID\n        //\u5411RabbitMQ\u53d1\u9001\u6d88\u606f\n        try (Connection connection = factory.newConnection();\n             Channel channel = connection.createChannel()) {\n            //\u8fde\u63a5\u5230\u67d0\u4e2aTopic\n            channel.queueDeclare(topic, true, false, false, null);\n            HashMap header = new HashMap(); //\u5b58\u653e\u5c5e\u6027\u6570\u636e\n            header.put("messageId", id);\n            //\u521b\u5efaAMQP\u534f\u8bae\u53c2\u6570\u5bf9\u8c61\uff0c\u6dfb\u52a0\u9644\u52a0\u5c5e\u6027\n            AMQP.BasicProperties properties = new AMQP.BasicProperties().builder().headers(header).build();\n            channel.basicPublish("", topic, properties, entity.getMsg().getBytes());\n            log.debug("\u6d88\u606f\u53d1\u9001\u6210\u529f");\n        } catch (Exception e) {\n            log.error("\u6267\u884c\u5f02\u5e38", e);\n            throw new EmosException("\u5411MQ\u53d1\u9001\u6d88\u606f\u5931\u8d25");\n        }\n    }\n    /**\n     * \u5f02\u6b65\u53d1\u9001\u6d88\u606f\n     *\n     * @param topic  \u4e3b\u9898\n     * @param entity\n     */\n    @Async\n    public void sendAsync(String topic, MessageEntity entity) {\n        send(topic, entity);\n    }\n    /**\n     * \u540c\u6b65\u63a5\u6536\u6570\u636e\n     *\n     * @param topic \u4e3b\u9898\n     * @return \u63a5\u6536\u6d88\u606f\u6570\u91cf\n     */\n    public int receive(String topic) {\n        int i = 0;\n        try (//\u63a5\u6536\u6d88\u606f\u6570\u636e\n             Connection connection = factory.newConnection();\n             Channel channel = connection.createChannel()) {\n            // \u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u6d88\u606f\uff0c\u4e0d\u81ea\u52a8\u786e\u8ba4\n            channel.queueDeclare(topic, true, false, false, null);\n            //Topic\u4e2d\u6709\u591a\u5c11\u6761\u6570\u636e\u672a\u77e5\uff0c\u6240\u4ee5\u4f7f\u7528\u6b7b\u5faa\u73af\u63a5\u6536\u6570\u636e\uff0c\u76f4\u5230\u63a5\u6536\u4e0d\u5230\u6d88\u606f\uff0c\u9000\u51fa\u6b7b\u5faa\u73af\n            while (true) {\n                //\u521b\u5efa\u54cd\u5e94\u63a5\u6536\u6570\u636e\uff0c\u7981\u6b62\u81ea\u52a8\u53d1\u9001Ack\u5e94\u7b54\n                GetResponse response = channel.basicGet(topic, false);\n                if (response != null) {\n                    AMQP.BasicProperties properties = response.getProps();\n                    Map<String, Object> header = properties.getHeaders(); //\u83b7\u53d6\u9644\u52a0\u5c5e\u6027\u5bf9\u8c61\n                    String messageId = header.get("messageId").toString();\n                    byte[] body = response.getBody();//\u83b7\u53d6\u6d88\u606f\u6b63\u6587\n                    String message = new String(body);\n                    log.debug("\u4eceRabbitMQ\u63a5\u6536\u7684\u6d88\u606f\uff1a" + message);\n                    MessageRefEntity entity = new MessageRefEntity();\n                    entity.setMessageId(messageId);\n                    entity.setReceiverId(Integer.parseInt(topic));\n                    entity.setReadFlag(false);\n                    entity.setLastFlag(true);\n                    messageService.insertRef(entity); //\u628a\u6d88\u606f\u5b58\u50a8\u5728MongoDB\u4e2d\n                    //\u6570\u636e\u4fdd\u5b58\u5230MongoDB\u540e\uff0c\u624d\u53d1\u9001Ack\u5e94\u7b54\uff0c\u8ba9Topic\u5220\u9664\u8fd9\u6761\u6d88\u606f\n                    long deliveryTag = response.getEnvelope().getDeliveryTag();\n                    channel.basicAck(deliveryTag, false);\n                    i++;\n                } else {\n                    break; //\u63a5\u6536\u4e0d\u5230\u6d88\u606f\uff0c\u5219\u9000\u51fa\u6b7b\u5faa\u73af\n                }\n            }\n        } catch (Exception e) {\n            log.error("\u6267\u884c\u5f02\u5e38", e);\n        }\n        return i;\n    }\n    /**\n     * \u5f02\u6b65\u63a5\u6536\u6570\u636e\n     *\n     * @param topic\n     * @return\n     */\n    @Async\n    public int receiveAysnc(String topic) {\n        return receive(topic);\n    }\n    /**\n     * \u540c\u6b65\u5220\u9664\u6d88\u606f\u961f\u5217\n     *\n     * @param topic \u4e3b\u9898\n     */\n    public void deleteQueue(String topic) {\n        try (Connection connection = factory.newConnection();\n             Channel channel = connection.createChannel()) {\n            channel.queueDelete(topic);\n            log.debug("\u6d88\u606f\u961f\u5217\u6210\u529f\u5220\u9664");\n        } catch (Exception e) {\n            log.error("\u5220\u9664\u961f\u5217\u5931\u8d25", e);\n            throw new EmosException("\u5220\u9664\u961f\u5217\u5931\u8d25");\n        }\n    }\n    /**\n     * \u5f02\u6b65\u5220\u9664\u6d88\u606f\u961f\u5217\n     *\n     * @param topic \u4e3b\u9898\n     */\n    @Async\n    public void deleteQueueAsync(String topic) {\n        deleteQueue(topic);\n    }\n}\n\n')),(0,a.kt)("h2",{id:"rocketmq"},"RocketMQ"),(0,a.kt)("h3",{id:"\u5bfc\u5165pom-1"},"\u5bfc\u5165POM"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>org.apache.rocketmq</groupId>\n    <artifactId>rocketmq-client</artifactId>\n    <version>4.9.3</version>\n</dependency>\n")),(0,a.kt)("p",null,"\u4e00\u822c\u914d\u5408redis\u4f7f\u7528"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-data-redis</artifactId>\n</dependency>\n")),(0,a.kt)("h3",{id:"\u914d\u7f6e\u7c7b-1"},"\u914d\u7f6e\u7c7b"),(0,a.kt)("p",null,"YAML\u6587\u4ef6\u914d\u7f6e"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"rocketmq:\n  name:\n    server:\n      address: 127.0.0.1:9876\n")),(0,a.kt)("p",null,"\u6a21\u677f\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Configuration\npublic class RocketMQConfig {\n\n    @Value("${rocketmq.name.server.address}")\n    private String nameServerAddr;\n\n    @Autowired\n    private RedisTemplate<String, String> redisTemplate;\n\n    @Bean(name = "csProducer")\n    public DefaultMQProducer csProducer() throws Exception {\n        //\u4f7f\u7528\u751f\u4ea7\u8005\u7ec4\u540d\u5b9e\u4f8b\u5316\u4e00\u4e2a\u751f\u4ea7\u8005\n        DefaultMQProducer producer = new DefaultMQProducer("ComputerScienceLearnNotes");\n        // \u6307\u5b9aRocketMQ nameServer\u5730\u5740\n        producer.setNamesrvAddr(nameServerAddr);\n        // \u542f\u52a8\u751f\u4ea7\u8005\n        producer.start();\n        return producer;\n    }\n    \n    @Bean(name = "csConsumer")\n    public DefaultMQPushConsumer csConsumer() {\n        //\u5b9e\u4f8b\u5316\u6d88\u8d39\u8005\uff0c\u4f20\u5165\u6d88\u8d39\u8005\u7ec4\uff0c\u8868\u793a\u6d88\u8d39\u540c\u4e00\u7c7b\u6d88\u606f\n        DefaultMQPushConsumer consumer = new DefaultMQPushConsumer("csProducer");\n        // \u6307\u5b9aRocketMQ nameServer\u5730\u5740\n        producer.setNamesrvAddr(nameServerAddr);\n        //\u8bbe\u7f6e\u8ba2\u9605\n        consumer.subscribe("ComputerScienceLearnNotes", "*");\n        // \u76d1\u542c\u5668\n        consumer.registerMessageListener(new MessageListenerConcurrently() {\n            @Override\n            public ConsumeConcurrentlyStatus consumeMessage(List<MessageExt> msgs, ConsumeConcurrentlyContext context) {\n                for (MessageExt msg : msgs) {\n                }\n                return ConsumeConcurrentlyStatus.CONSUME_SUCCESS;\n            }\n        });\n    }\n    //\u542f\u52a8\u6d88\u8d39\u8005\n    consumer.start();\n    return consumer;\n}\n')),(0,a.kt)("h3",{id:"\u5c01\u88c5rocketmq\u5de5\u5177\u7c7b"},"\u5c01\u88c5\uff1aRocketMQ\u5de5\u5177\u7c7b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'public class RocketMQUtil {\n\n    // \u540c\u6b65\u53d1\u9001\u6d88\u606f\n    public static void syncSendMsg(DefaultMQProducer producer, Message message) throws Exception {\n        SendResult res = producer.send(message);\n        System.out.println(res);\n    }\n\n    // \u5f02\u6b65\u53d1\u9001\u6d88\u606f\n    public static void asyncSendMsg(DefaultMQProducer producer, Message message) throws Exception {\n        int messageCount = 2;\n        CountDownLatch2 countDownLatch = new CountDownLatch2(messageCount);\n        for (int i = 0; i < messageCount; i++) {\n            producer.send(message, new SendCallback() {\n                @Override\n                public void onSuccess(SendResult sendResult) {\n                    countDownLatch.countDown();\n                    System.out.println(sendResult.getMsgId());\n                }\n\n                @Override\n                public void onException(Throwable e) {\n                    countDownLatch.countDown();\n                    System.out.println("\u53d1\u9001\u6d88\u606f\u7684\u65f6\u5019\u53d1\u751f\u4e86\u5f02\u5e38\uff01" + e);\n                    e.printStackTrace();\n                }\n            });\n        }\n        countDownLatch.await(5, TimeUnit.SECONDS);\n    }\n}\n')),(0,a.kt)("h2",{id:"websocket"},"WebSocket"),(0,a.kt)("p",null,"\u524d\u8a00\uff1a\u8fd9\u662f\u5728\u505a\u4e00\u4e2a\u5728\u7ebf\u4eba\u6570\u7edf\u8ba1\u548c\u5f39\u5e55\u7cfb\u7edf\u7684\u65f6\u5019\u7684\u89e3\u51b3\u65b9\u6848\u3002"),(0,a.kt)("h3",{id:"\u5bfc\u5165pom-2"},"\u5bfc\u5165POM"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-websocket</artifactId>\n</dependency>\n")),(0,a.kt)("h3",{id:"\u914d\u7f6e"},"\u914d\u7f6e"),(0,a.kt)("p",null,"\u4e00\u822c\u5728config\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2aWebSocketConfig\uff1a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u6ce8\u610f\u5199Bean\u6ce8\u89e3"),(0,a.kt)("li",{parentName:"ol"},"\u7c7b",(0,a.kt)("inlineCode",{parentName:"li"},"ServerEndpointExporter"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"@Configuration\npublic class WebSocketConfig {\n\n    /**\n     * \u53d1\u73b0websocket\u670d\u52a1\n     * @return\n     */\n    @Bean\n    public ServerEndpointExporter serverEndpointExporter() {\n\n        return new ServerEndpointExporter();\n    }\n}\n")),(0,a.kt)("h3",{id:"\u521b\u5efa\u670d\u52a1"},"\u521b\u5efa\u670d\u52a1"),(0,a.kt)("p",null,"\u521b\u5efawebSocket\u670d\u52a1\uff0c\u6846\u67b6\u5982\u4e0b\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"@Component\u6ce8\u89e3"),(0,a.kt)("li",{parentName:"ul"},"@ServerEndpoint()\uff0c\u8fd9\u65f6\u5c31\u5173\u8054\u5230\u4e86\u914d\u7f6e\u7c7b\u4e86"),(0,a.kt)("li",{parentName:"ul"},"logger\uff0cslf4j\u6846\u67b6\u65e5\u5fd7\u6253\u5370"),(0,a.kt)("li",{parentName:"ul"},"AtomicInteger ONLINE_COUNT\uff0c\u5728\u7ebf\u4eba\u6570\uff0c\u4f7f\u7528\u539f\u5b50\u7c7b"),(0,a.kt)("li",{parentName:"ul"},"ConcurrentHashMap\uff0ckey\u4fdd\u7559\u7684\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u4f1a\u8bddsession\uff0cvalue\u4fdd\u7559Websocket\uff08\u591a\u4f8b\uff09"),(0,a.kt)("li",{parentName:"ul"},"@OnOpen\uff0c\u5efa\u7acb\u65b9\u6cd5"),(0,a.kt)("li",{parentName:"ul"},"@OnClose\uff0c\u5173\u95ed\u65b9\u6cd5")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'@Component\n@ServerEndpoint("/imserver")\npublic class WebSocketService {\n\n    private final Logger logger = LoggerFactory.getLogger(this.getClass());\n\n    private static final AtomicInteger ONLINE_COUNT = new AtomicInteger(0);\n\n    public static final ConcurrentHashMap<String, WebSocketService> WEBSOCKET_MAP = new ConcurrentHashMap<>();\n\n    private Session session;\n\n    private String sessionId;\n\n    @OnOpen\n    public void openConnection(Session session) {\n        this.session = session;\n        this.sessionId = session.getId();\n        if (WEBSOCKET_MAP.containsKey(sessionId)) {\n            WEBSOCKET_MAP.replace(sessionId, this);\n        } else {\n            WEBSOCKET_MAP.put(sessionId, this);\n            ONLINE_COUNT.getAndIncrement();\n        }\n        logger.info("\u7528\u6237\u8fde\u63a5\u6210\u529f\uff1a" + sessionId + ", \u5f53\u524d\u5728\u7ebf\u4eba\u6570\u4e3a\uff1a" + ONLINE_COUNT.get());\n        // \u901a\u77e5\u524d\u7aef\n        try {\n            this.sendMessage("0");\n        } catch (Exception e) {\n            logger.error("\u8fde\u63a5\u5f02\u5e38");\n        }\n    }\n\n    @OnClose\n    public void closeConnection() {\n        if (WEBSOCKET_MAP.containsKey(sessionId)) {\n            WEBSOCKET_MAP.remove(sessionId);\n            ONLINE_COUNT.getAndDecrement();\n        }\n        logger.info("\u7528\u6237\u9000\u51fa\uff1a" + sessionId +  ", \u5f53\u524d\u5728\u7ebf\u4eba\u6570\u4e3a\uff1a" + ONLINE_COUNT.get());\n    }\n\n    @OnMessage\n    public void onMessage(String message) {\n        logger.info("\u7528\u6237\u4fe1\u606f\uff1a" + sessionId + ", \u62a5\u6587\uff1a" + message);\n        if (!StringUtil.isNullOrEmpty(message)) {\n            try {\n                // \u7fa4\u53d1\u6d88\u606f (\u751f\u4ea7\u8005)\n                for (Map.Entry<String, WebSocketService> entry : WEBSOCKET_MAP.entrySet()) {\n                    WebSocketService webSocketService = entry.getValue();\n                    if (webSocketService.session.isOpen()) {\n                        webSocketService.sendMessage(message);\n                    }\n                }\n                // \u8fd9\u91cc\u8fd8\u53ef\u4ee5\u6dfb\u52a0\u6301\u4e45\u5316\n            } catch (Exception e) {\n                logger.error("\u63a5\u6536\u51fa\u73b0\u95ee\u9898");\n                e.printStackTrace();\n            }\n        }\n    }\n\n    @OnError\n    public void onError(Throwable error) {\n\n    }\n}\n')),(0,a.kt)("p",null,"\u4e0a\u8ff0\u8fd9\u4e2a\u6846\u67b6\u5b58\u5728\u4e00\u4e2a\u95ee\u9898\u5c31\u662fwebsocket\u4e0d\u662f\u591a\u4f8b\u7684\uff0c\u6bd4\u5982\u6ce8\u5165redisTemplate\uff0c\u56e0\u4e3aWebSocket\u662f\u591a\u4f8b\u7684\uff0c\u6240\u4ee5\u5728\u7b2c\u4e8c\u6b21\u521b\u5efa\u7684\u65f6\u5019SpringBoot\u5c31\u4e0d\u4f1a\u4e3aredisTemplate\u521b\u5efa\u7b2c\u4e8c\u6b21"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image-20220727155309742",src:t(65369).Z,width:"300",height:"130"})),(0,a.kt)("h3",{id:"\u89e3\u51b3\u65b9\u6848\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587"},"\u89e3\u51b3\u65b9\u6848\uff1a\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587"),(0,a.kt)("p",null,"\u521b\u5efa\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e0a\u4e0b\u6587\u5728\u8fd9\u4e2a\u670d\u52a1\u7c7b\uff08",(0,a.kt)("inlineCode",{parentName:"p"},"WebSocketService"),"\uff09\u91cc"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"private static ApplicationContext APPLICATION_CONTEXT;\n")),(0,a.kt)("p",null,"\u63d0\u4f9b\u4e00\u4e2a\u8bbe\u7f6e\u65b9\u6cd5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"public static void setApplicationContext(ApplicationContext applicationContext) {\n    WebSocketService.APPLICATION_CONTEXT = applicationContext;\n}\n")),(0,a.kt)("p",null,"\u8fd9\u65f6\u518d\u7528RedisTemplate\u8fdb\u884c\u6d4b\u8bd5\u5c31\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u6709\u7c7b\u4e86"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'(RedisTemplate)WebSocketService.APPLICATION_CONTEXT.getBean("redisTemplate");\n')),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"image-20220727160159331",src:t(11223).Z,width:"440",height:"151"})),(0,a.kt)("h3",{id:"\u4f18\u5316mq\u524a\u5cf0\u586b\u8c37"},"\u4f18\u5316\uff1aMQ\u524a\u5cf0\u586b\u8c37"))}u.isMDXComponent=!0},65369:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/image-20220727155309742-a258da720a9382b91f7ed8acca1bb6bf.png"},11223:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/image-20220727160159331-0292b0ff966cf95b154124a909cb452c.png"}}]);