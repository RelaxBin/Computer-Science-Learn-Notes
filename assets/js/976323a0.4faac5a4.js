"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9587],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=l,v=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(v,a(a({ref:t},d),{},{components:n})):r.createElement(v,a({ref:t},d))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,a=new Array(o);a[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,a[1]=i;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},48086:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(87462),l=(n(67294),n(3905));const o={},a="\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811",i={unversionedId:"Java/leetcode/src/BinaryTree/\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811",id:"Java/leetcode/src/BinaryTree/\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811",title:"\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811",description:"https://leetcode-cn.com/problems/convert-sorted-list-to-binary-search-tree/",source:"@site/docs/Java/leetcode/src/BinaryTree/109-\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811.md",sourceDirName:"Java/leetcode/src/BinaryTree",slug:"/Java/leetcode/src/BinaryTree/\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/BinaryTree/\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811",draft:!1,editUrl:"https://github.com/zhiyu1998/Computer-Science-Learn-Notes/edit/master/docs/Java/leetcode/src/BinaryTree/109-\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811.md",tags:[],version:"current",sidebarPosition:109,frontMatter:{},sidebar:"sidebars",previous:{title:"\u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/BinaryTree/\u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811"},next:{title:"\u5e73\u8861\u4e8c\u53c9\u6811",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/BinaryTree/\u5e73\u8861\u4e8c\u53c9\u6811"}},s={},c=[{value:"\u95ee\u9898\u63cf\u8ff0",id:"\u95ee\u9898\u63cf\u8ff0",level:2},{value:"\u7b2c\u4e00\u60f3\u6cd5\uff1a\u5077\u61d2\u5199\u6cd5",id:"\u7b2c\u4e00\u60f3\u6cd5\u5077\u61d2\u5199\u6cd5",level:2},{value:"\u5feb\u6162\u6307\u9488",id:"\u5feb\u6162\u6307\u9488",level:2}],d={toc:c};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811"},"\u6709\u5e8f\u94fe\u8868\u8f6c\u6362\u4e8c\u53c9\u641c\u7d22\u6811"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/convert-sorted-list-to-binary-search-tree/"},"https://leetcode-cn.com/problems/convert-sorted-list-to-binary-search-tree/")),(0,l.kt)("h2",{id:"\u95ee\u9898\u63cf\u8ff0"},"\u95ee\u9898\u63cf\u8ff0"),(0,l.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u5355\u94fe\u8868\u7684\u5934\u8282\u70b9  head \uff0c\u5176\u4e2d\u7684\u5143\u7d20 \u6309\u5347\u5e8f\u6392\u5e8f \uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u9ad8\u5ea6\u5e73\u8861\u7684\u4e8c\u53c9\u641c\u7d22\u6811\u3002"),(0,l.kt)("p",null,"\u672c\u9898\u4e2d\uff0c\u4e00\u4e2a\u9ad8\u5ea6\u5e73\u8861\u4e8c\u53c9\u6811\u662f\u6307\u4e00\u4e2a\u4e8c\u53c9\u6811\u6bcf\u4e2a\u8282\u70b9 \u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u5dee\u4e0d\u8d85\u8fc7 1\u3002"),(0,l.kt)("h2",{id:"\u7b2c\u4e00\u60f3\u6cd5\u5077\u61d2\u5199\u6cd5"},"\u7b2c\u4e00\u60f3\u6cd5\uff1a\u5077\u61d2\u5199\u6cd5"),(0,l.kt)("p",null,"\u501f\u7528\u4e0a\u4e00\u9898\u7684\u51fd\u6570\u76f4\u63a5\u5199\u51fa\u7b54\u6848\uff08\u5c06\u6709\u5e8f\u94fe\u8868\u8f6c\u6210\u6709\u5e8f\u6570\u7ec4\uff09"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sortedListToBST(ListNode head) {\n        int[] nums = new int[20000];\n        int i = 0;\n        while (head != null) {\n            nums[i++] = head.val;\n            head = head.next;\n        }\n\n        return build(nums, 0, i - 1);\n    }\n\n    private TreeNode build(int[] nums, int start, int end) {\n\n        if (start > end)\n            return null;\n        \n        int rootIndex = (start + end + 1) / 2;\n        \n        TreeNode root = new TreeNode(nums[rootIndex]);\n        \n        root.left = build(nums, start, rootIndex - 1);\n        root.right = build(nums, rootIndex + 1, end);\n\n        return root;\n    }\n}\n")),(0,l.kt)("p",null,"\u5f88\u597d\uff0c\u6478\u9c7c\u5f88\u5feb\u4e50\uff0c\u7ed3\u679c\u5f88\u611f\u4eba"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u6267\u884c\u7ed3\u679c\uff1a\u901a\u8fc7\n\u6267\u884c\u7528\u65f6\uff1a1 ms, \u5728\u6240\u6709 Java \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8624.05% \u7684\u7528\u6237\n\u5185\u5b58\u6d88\u8017\uff1a43 MB, \u5728\u6240\u6709 Java \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e865.10% \u7684\u7528\u6237\n\u901a\u8fc7\u6d4b\u8bd5\u7528\u4f8b\uff1a32 / 32")),(0,l.kt)("h2",{id:"\u5feb\u6162\u6307\u9488"},"\u5feb\u6162\u6307\u9488"),(0,l.kt)("p",null,"\u5bfb\u627e\u94fe\u8868\u7684\u4e2d\u95f4\u70b9\u6709\u4e2a\u5c0f\u6280\u5de7\uff1a"),(0,l.kt)("p",null,"\u5feb\u6162\u6307\u9488\u8d77\u521d\u90fd\u6307\u5411\u5934\u7ed3\u70b9\uff0c\u5206\u522b\u4e00\u6b21\u8d70\u4e24\u6b65\u548c\u4e00\u6b65\uff0c\u5f53\u5feb\u6307\u9488\u8d70\u5230\u5c3e\u8282\u70b9\u65f6\uff0c\u6162\u6307\u9488\u6b63\u597d\u8d70\u5230\u94fe\u8868\u7684\u4e2d\u95f4\u3002\u65ad\u6210\u4e24\u4e2a\u94fe\u8868\uff0c\u5206\u800c\u6cbb\u4e4b\u3002"),(0,l.kt)("p",null,"\u4e3a\u4e86\u65ad\u5f00\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u5b58\u6162\u6307\u9488\u7684\u524d\u4e00\u4e2a\u8282\u70b9\uff0c\u56e0\u4e3a\u5355\u5411\u94fe\u8868\u7684\u7ed3\u70b9\u6ca1\u6709\u524d\u9a71\u6307\u9488\u3002"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://pic.leetcode-cn.com/b112a5eba08d0e85771ddaa41c005a7057c8ca05f1e29e0316f0ec15c37c96d5-image.png",alt:null})),(0,l.kt)("p",null,"\u6784\u5efa\u4ee3\u7801\uff1a"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u9996\u5148\u6211\u8fd8\u6ca1\u6709\u8003\u8651\u8fc7\u4e24\u4e2a\u60c5\u51b5 ",(0,l.kt)("inlineCode",{parentName:"li"},"head == null")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"head.next == null")),(0,l.kt)("li",{parentName:"ol"},"\u7136\u540e\u5c31\u5148\u5199\u4e86\u5feb\u6162\u6307\u9488\u7684\u601d\u60f3\uff0cslow\u8de8\u4e00\u6b65\uff08next\uff09\uff0cfast\u8de8\u4e24\u6b65\uff08next.next\uff09"),(0,l.kt)("li",{parentName:"ol"},"\u4fdd\u5b58\u4e00\u4e2a\u524d\u8282\u70b9\uff08\u6162\u6307\u9488\u7684\u4e0a\u4e00\u4e2a\u4f4d\u7f6e\uff09\uff0c\u6ce8\u610f\u8fd9\u91cc\u7684\u4f4d\u7f6e\u662f\u5728\u8d4b\u503c\u5b8croot\u4ee5\u540e\u624d\u7f6e\u4e3anull\uff0c\u4e0d\u7136\u53ef\u80fd\u4ea7\u751fstackoverflow"),(0,l.kt)("li",{parentName:"ol"},"\u8fd9\u91cc\u7684\u5feb\u6162\u6307\u9488\u5224\u65ad\u6761\u4ef6\u9996\u5148\u8981\u5224\u65ad\u81ea\u5df1\uff08\u5feb\u6307\u9488\uff09\u662f\u5426\u4e3anull\uff0c\u4e0d\u7136\u53ea\u5224\u65ad\u5feb\u6307\u9488\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u4e3a\u5bfc\u81f4\u81ea\u5df1\u4e3anull\u65e0\u6cd5\u5224\u65ad\u51fanull\uff1b\u5982\u679c\u53ea\u5224\u65ad\u81ea\u5df1\u4e0d\u5224\u65adnext\uff0c\u4f1a\u5bfc\u81f4",(0,l.kt)("inlineCode",{parentName:"li"},"fast.next.next;"),"\u6709\u53ef\u80fdfast.next\u4e3anull\u65e0\u6cd5\u7b97\u51fanext.next\u7684\u4f4d\u7f6e"),(0,l.kt)("li",{parentName:"ol"},"\u6700\u540e\u5c31\u662f\u7ed9\u5de6\u53f3\u4f4d\u7f6e\u5f88\u7b80\u5355\u4e86"),(0,l.kt)("li",{parentName:"ol"},"\u505a\u5b8c\u8fd9\u4e9b\u8981\u8bbe\u7f6e\u8fd9\u4e2a\u9012\u5f52\u7684\u7ed3\u675f\u70b9\uff0c\u4e5f\u5c31\u662f\u5f53\u4f20\u5165\u7684\u8282\u70b9\u4e3anull\u548cnext\u4e3anull\u7684\u60c5\u51b5\uff0c\u7f3a\u4e00\u4e0d\u53ef\uff01\u3010\u5f53\u7136\u8fd9\u4e2a\u70b9\u53ef\u4ee5\u63d0\u524d\u8003\u8651\uff0c\u6211\u662f\u6700\u540e\u8003\u8651\u5bfc\u81f4\u8e29\u5751\u3011")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public TreeNode sortedListToBST(ListNode head) {\n        if (head == null) return null;\n        if (head.next == null)\n            return new TreeNode(head.val);\n\n        ListNode slow = head, fast = head, pre = new ListNode();\n        while (fast !=null && fast.next != null) {\n            pre = slow;\n            slow = slow.next;\n\n            fast = fast.next.next;\n        }\n\n        TreeNode root = new TreeNode(slow.val);\n\n        pre.next = null;\n\n        root.left = sortedListToBST(head);\n\n        root.right = sortedListToBST(slow.next);\n\n        return root;\n    }\n\n}\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u6267\u884c\u7ed3\u679c\uff1a\u901a\u8fc7"),(0,l.kt)("p",{parentName:"blockquote"},"\u6267\u884c\u7528\u65f6\uff1a0 ms, \u5728\u6240\u6709 Java \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e86100.00% \u7684\u7528\u6237"),(0,l.kt)("p",{parentName:"blockquote"},"\u5185\u5b58\u6d88\u8017\uff1a42.4 MB, \u5728\u6240\u6709 Java \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e8657.03% \u7684\u7528\u6237"),(0,l.kt)("p",{parentName:"blockquote"},"\u901a\u8fc7\u6d4b\u8bd5\u7528\u4f8b\uff1a32 / 32")))}u.isMDXComponent=!0}}]);