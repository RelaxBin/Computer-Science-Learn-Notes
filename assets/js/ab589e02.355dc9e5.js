"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5530],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),c=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(i.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),u=c(t),m=o,f=u["".concat(i,".").concat(m)]||u[m]||s[m]||a;return t?r.createElement(f,l(l({ref:n},p),{},{components:t})):r.createElement(f,l({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=u;var d={};for(var i in n)hasOwnProperty.call(n,i)&&(d[i]=n[i]);d.originalType=e,d.mdxType="string"==typeof e?e:o,l[1]=d;for(var c=2;c<a;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},772:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>s,frontMatter:()=>a,metadata:()=>d,toc:()=>c});var r=t(87462),o=(t(67294),t(3905));const a={},l="\u590d\u5236\u5e26\u968f\u673a\u6307\u9488\u7684\u94fe\u8868",d={unversionedId:"Java/leetcode/src/LinkedList/\u590d\u5236\u5e26\u968f\u673a\u6307\u9488\u7684\u94fe\u8868",id:"Java/leetcode/src/LinkedList/\u590d\u5236\u5e26\u968f\u673a\u6307\u9488\u7684\u94fe\u8868",title:"\u590d\u5236\u5e26\u968f\u673a\u6307\u9488\u7684\u94fe\u8868",description:"https://leetcode.cn/problems/copy-list-with-random-pointer/",source:"@site/docs/Java/leetcode/src/LinkedList/138-\u590d\u5236\u5e26\u968f\u673a\u6307\u9488\u7684\u94fe\u8868.md",sourceDirName:"Java/leetcode/src/LinkedList",slug:"/Java/leetcode/src/LinkedList/\u590d\u5236\u5e26\u968f\u673a\u6307\u9488\u7684\u94fe\u8868",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/LinkedList/\u590d\u5236\u5e26\u968f\u673a\u6307\u9488\u7684\u94fe\u8868",draft:!1,editUrl:"https://github.com/zhiyu1998/Computer-Science-Learn-Notes/edit/master/docs/Java/leetcode/src/LinkedList/138-\u590d\u5236\u5e26\u968f\u673a\u6307\u9488\u7684\u94fe\u8868.md",tags:[],version:"current",sidebarPosition:138,frontMatter:{},sidebar:"sidebars",previous:{title:"\u53cd\u8f6c\u94fe\u8868II",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/LinkedList/\u53cd\u8f6c\u94fe\u8868II"},next:{title:"\u73af\u5f62\u94fe\u8868",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/LinkedList/\u73af\u5f62\u94fe\u8868"}},i={},c=[{value:"\u9898\u76ee\u63cf\u8ff0",id:"\u9898\u76ee\u63cf\u8ff0",level:2},{value:"\u7b2c\u4e00\u60f3\u6cd5\uff1a\u54c8\u5e0c\u8868",id:"\u7b2c\u4e00\u60f3\u6cd5\u54c8\u5e0c\u8868",level:2}],p={toc:c};function s(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u590d\u5236\u5e26\u968f\u673a\u6307\u9488\u7684\u94fe\u8868"},"\u590d\u5236\u5e26\u968f\u673a\u6307\u9488\u7684\u94fe\u8868"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/copy-list-with-random-pointer/"},"https://leetcode.cn/problems/copy-list-with-random-pointer/")),(0,o.kt)("h2",{id:"\u9898\u76ee\u63cf\u8ff0"},"\u9898\u76ee\u63cf\u8ff0"),(0,o.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u94fe\u8868\uff0c\u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u989d\u5916\u589e\u52a0\u7684\u968f\u673a\u6307\u9488 random \uff0c\u8be5\u6307\u9488\u53ef\u4ee5\u6307\u5411\u94fe\u8868\u4e2d\u7684\u4efb\u4f55\u8282\u70b9\u6216\u7a7a\u8282\u70b9\u3002"),(0,o.kt)("p",null,"\u6784\u9020\u8fd9\u4e2a\u94fe\u8868\u7684 \u6df1\u62f7\u8d1d\u3002 \u6df1\u62f7\u8d1d\u5e94\u8be5\u6b63\u597d\u7531 n \u4e2a \u5168\u65b0 \u8282\u70b9\u7ec4\u6210\uff0c\u5176\u4e2d\u6bcf\u4e2a\u65b0\u8282\u70b9\u7684\u503c\u90fd\u8bbe\u4e3a\u5176\u5bf9\u5e94\u7684\u539f\u8282\u70b9\u7684\u503c\u3002\u65b0\u8282\u70b9\u7684 next \u6307\u9488\u548c random \u6307\u9488\u4e5f\u90fd\u5e94\u6307\u5411\u590d\u5236\u94fe\u8868\u4e2d\u7684\u65b0\u8282\u70b9\uff0c\u5e76\u4f7f\u539f\u94fe\u8868\u548c\u590d\u5236\u94fe\u8868\u4e2d\u7684\u8fd9\u4e9b\u6307\u9488\u80fd\u591f\u8868\u793a\u76f8\u540c\u7684\u94fe\u8868\u72b6\u6001\u3002\u590d\u5236\u94fe\u8868\u4e2d\u7684\u6307\u9488\u90fd\u4e0d\u5e94\u6307\u5411\u539f\u94fe\u8868\u4e2d\u7684\u8282\u70b9 \u3002"),(0,o.kt)("p",null,"\u4f8b\u5982\uff0c\u5982\u679c\u539f\u94fe\u8868\u4e2d\u6709 X \u548c Y \u4e24\u4e2a\u8282\u70b9\uff0c\u5176\u4e2d X.random --\x3e Y \u3002\u90a3\u4e48\u5728\u590d\u5236\u94fe\u8868\u4e2d\u5bf9\u5e94\u7684\u4e24\u4e2a\u8282\u70b9 x \u548c y \uff0c\u540c\u6837\u6709 x.random --\x3e y \u3002"),(0,o.kt)("p",null,"\u8fd4\u56de\u590d\u5236\u94fe\u8868\u7684\u5934\u8282\u70b9\u3002"),(0,o.kt)("p",null,"\u7528\u4e00\u4e2a\u7531 n \u4e2a\u8282\u70b9\u7ec4\u6210\u7684\u94fe\u8868\u6765\u8868\u793a\u8f93\u5165/\u8f93\u51fa\u4e2d\u7684\u94fe\u8868\u3002\u6bcf\u4e2a\u8282\u70b9\u7528\u4e00\u4e2a ","[val, random_index]"," \u8868\u793a\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"val\uff1a\u4e00\u4e2a\u8868\u793a Node.val \u7684\u6574\u6570\u3002\nrandom_index\uff1a\u968f\u673a\u6307\u9488\u6307\u5411\u7684\u8282\u70b9\u7d22\u5f15\uff08\u8303\u56f4\u4ece 0 \u5230 n-1\uff09\uff1b\u5982\u679c\u4e0d\u6307\u5411\u4efb\u4f55\u8282\u70b9\uff0c\u5219\u4e3a  null \u3002\n")),(0,o.kt)("p",null,"\u4f60\u7684\u4ee3\u7801 \u53ea \u63a5\u53d7\u539f\u94fe\u8868\u7684\u5934\u8282\u70b9 head \u4f5c\u4e3a\u4f20\u5165\u53c2\u6570\u3002"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2020/01/09/e1.png",alt:null})),(0,o.kt)("h2",{id:"\u7b2c\u4e00\u60f3\u6cd5\u54c8\u5e0c\u8868"},"\u7b2c\u4e00\u60f3\u6cd5\uff1a\u54c8\u5e0c\u8868"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"/*\n// Definition for a Node.\nclass Node {\n    int val;\n    Node next;\n    Node random;\n\n    public Node(int val) {\n        this.val = val;\n        this.next = null;\n        this.random = null;\n    }\n}\n*/\n\nclass Solution {\n    public Node copyRandomList(Node head) {\n        HashMap<Node, Node> map = new HashMap<>();\n        // \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\n        Node dummyHead = new Node(0);\n        Node p = dummyHead;\n\n        while (head != null) {\n            Node node = new Node(head.val);\n            if (!map.containsKey(head)) {\n                node = new Node(head.val);\n                map.put(head, node);\n            } else {\n                node = map.get(head);\n            }\n            if (!map.containsKey(head.random)) {\n                if (head.random != null) {\n                    Node randomNode = new Node(head.random.val);\n                    node.random = randomNode;\n                    map.put(head.random, randomNode);\n                } else {\n                    node.random = null;\n                }\n            } else {\n                node.random = map.get(head.random);\n            }\n            // \u6307\u5411\u65b0\u8282\u70b9\n            p.next = node;\n            p = p.next;\n            // \u4e0b\u4e00\u4e2a\u8282\u70b9\n            head = head.next;\n        }\n\n        return dummyHead.next;\n    }\n}\n")))}s.isMDXComponent=!0}}]);