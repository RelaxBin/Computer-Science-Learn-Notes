"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8105],{3905:(e,r,t)=>{t.d(r,{Zo:()=>d,kt:()=>v});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},d=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=s(t),v=a,f=p["".concat(c,".").concat(v)]||p[v]||u[v]||o;return t?n.createElement(f,l(l({ref:r},d),{},{components:t})):n.createElement(f,l({ref:r},d))}));function v(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=p;var i={};for(var c in r)hasOwnProperty.call(r,c)&&(i[c]=r[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},16095:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=t(87462),a=(t(67294),t(3905));const o={},l="\u4e8c\u53c9\u6811\u7684\u904d\u5386",i={unversionedId:"Java/leetcode/src/BinaryTree/\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386",id:"Java/leetcode/src/BinaryTree/\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386",title:"\u4e8c\u53c9\u6811\u7684\u904d\u5386",description:"https://leetcode-cn.com/problems/binary-tree-inorder-traversal/",source:"@site/docs/Java/leetcode/src/BinaryTree/94-\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386.md",sourceDirName:"Java/leetcode/src/BinaryTree",slug:"/Java/leetcode/src/BinaryTree/\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/BinaryTree/\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386",draft:!1,editUrl:"https://github.com/zhiyu1998/Computer-Science-Learn-Notes/edit/master/docs/Java/leetcode/src/BinaryTree/94-\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386.md",tags:[],version:"current",sidebarPosition:94,frontMatter:{},sidebar:"sidebars",previous:{title:"\u529b\u6263\u5237\u9898\u987a\u5e8f",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/"},next:{title:"\u4e0d\u540c\u7684\u4e8c\u53c9\u641c\u7d22\u6811 II",permalink:"/Computer-Science-Learn-Notes/docs/Java/leetcode/src/BinaryTree/\u4e0d\u540c\u7684\u4e8c\u53c9\u641c\u7d22\u6811 II"}},c={},s=[{value:"\u95ee\u9898\u63cf\u8ff0",id:"\u95ee\u9898\u63cf\u8ff0",level:2},{value:"Java",id:"java",level:2},{value:"\u9012\u5f52\u89e3\u6cd5",id:"\u9012\u5f52\u89e3\u6cd5",level:3},{value:"JavaScript",id:"javascript",level:2},{value:"\u9012\u5f52\u89e3\u6cd5",id:"\u9012\u5f52\u89e3\u6cd5-1",level:3},{value:"\u8fed\u4ee3\u89e3\u6cd5",id:"\u8fed\u4ee3\u89e3\u6cd5",level:3},{value:"\u89e3\u9898\u601d\u8def\u5c0f\u7ed3\uff1a",id:"\u89e3\u9898\u601d\u8def\u5c0f\u7ed3",level:2},{value:"\u9012\u5f52",id:"\u9012\u5f52",level:3},{value:"\u8fed\u4ee3",id:"\u8fed\u4ee3",level:3}],d={toc:s};function u(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u4e8c\u53c9\u6811\u7684\u904d\u5386"},"\u4e8c\u53c9\u6811\u7684\u904d\u5386"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/binary-tree-inorder-traversal/"},"https://leetcode-cn.com/problems/binary-tree-inorder-traversal/")),(0,a.kt)("h2",{id:"\u95ee\u9898\u63cf\u8ff0"},"\u95ee\u9898\u63cf\u8ff0"),(0,a.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 root \uff0c\u8fd4\u56de\u5b83\u7684 \u4e2d\u5e8f \u904d\u5386\u3002"),(0,a.kt)("h2",{id:"java"},"Java"),(0,a.kt)("h3",{id:"\u9012\u5f52\u89e3\u6cd5"},"\u9012\u5f52\u89e3\u6cd5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"/**\n *     class TreeNode {\n *         int val;\n *         TreeNode left;\n *         TreeNode right;\n *         TreeNode() {}\n *         TreeNode(int val) { this.val = val; }\n *         TreeNode(int val, TreeNode left, TreeNode right) {\n *             this.val = val;\n *             this.left = left;\n *             this.right = right;\n *         }\n *     }\n */\n\nclass Solution {\n    List<Integer> res = new LinkedList<>();\n\n    public List<Integer> inorderTraversal(TreeNode root) {\n        if (root != null) {\n            inorderTraversal(root.left);\n            res.add(root.val);\n            inorderTraversal(root.right);\n        }\n        return res;\n    }\n}\n")),(0,a.kt)("h2",{id:"javascript"},"JavaScript"),(0,a.kt)("h3",{id:"\u9012\u5f52\u89e3\u6cd5-1"},"\u9012\u5f52\u89e3\u6cd5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\n\nvar inorderTraversal = function (root) {\n  let res = [];\n  const iter = (root) => {\n    if (root == null) return;\n    iter(root.left);\n    res.push(root.val);\n    iter(root.right);\n  };\n  iter(root);\n  return res;\n};\n")),(0,a.kt)("h3",{id:"\u8fed\u4ee3\u89e3\u6cd5"},"\u8fed\u4ee3\u89e3\u6cd5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"/**\n * Definition for a binary tree node.\n * function TreeNode(val, left, right) {\n *     this.val = (val===undefined ? 0 : val)\n *     this.left = (left===undefined ? null : left)\n *     this.right = (right===undefined ? null : right)\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\n\nvar inorderTraversal = function (root) {\n  let res = [];\n  let stack = [];\n\n  while (root) {\n    stack.push(root);\n    root = root.left;\n  }\n  while (stack.length > 0) {\n    let node = stack.pop();\n    res.push(node.val);\n    node = node.right;\n    while (node) {\n      stack.push(node);\n      node = node.left;\n    }\n  }\n\n  return res;\n};\n")),(0,a.kt)("h2",{id:"\u89e3\u9898\u601d\u8def\u5c0f\u7ed3"},"\u89e3\u9898\u601d\u8def\u5c0f\u7ed3\uff1a"),(0,a.kt)("h3",{id:"\u9012\u5f52"},"\u9012\u5f52"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"void traverse(TreeNode root) {\n    // \u524d\u5e8f\u904d\u5386\n    traverse(root.left)\n    // \u4e2d\u5e8f\u904d\u5386\n    traverse(root.right)\n    // \u540e\u5e8f\u904d\u5386\n}\n")),(0,a.kt)("h3",{id:"\u8fed\u4ee3"},"\u8fed\u4ee3"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u904d\u5386\u5de6\u5b50\u6811"),(0,a.kt)("li",{parentName:"ol"},"\u628a\u904d\u5386\u7684\u8282\u70b9\u653e\u5165\u5230stack\u4e2d"),(0,a.kt)("li",{parentName:"ol"},"\u9010\u4e2a\u79fb\u51fastack\u4e2d\u7684\u5de6\u5b50\u6811\u8282\u70b9"),(0,a.kt)("li",{parentName:"ol"},"\u5f00\u59cb\u904d\u5386\u53f3\u5b50\u6811")))}u.isMDXComponent=!0}}]);