const e=JSON.parse('{"key":"v-69e83a40","path":"/Java/leetcode/%E5%89%91%E6%8C%87offer/%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E5%B0%81%E8%A3%85%E5%90%88%E9%9B%86.html","title":"力扣链表专题常用方法封装","lang":"zh-CN","frontmatter":{"description":"快慢指针找中间位置 反转链表 这里用的是力扣官方的代码，我的声明的变量稍微有点多 后序遍历 计算最大深度 判断是否是平衡二叉树 ```java public boolean isBalanced(TreeNode root) { if (root == null) return true; return Math.abs(depth(root.left...","head":[["meta",{"property":"og:url","content":"https://zhiyu1998.github.io/Computer-Science-Learn-Notes/Computer-Science-Learn-Notes/Java/leetcode/%E5%89%91%E6%8C%87offer/%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E5%B0%81%E8%A3%85%E5%90%88%E9%9B%86.html"}],["meta",{"property":"og:title","content":"力扣链表专题常用方法封装"}],["meta",{"property":"og:description","content":"快慢指针找中间位置 反转链表 这里用的是力扣官方的代码，我的声明的变量稍微有点多 后序遍历 计算最大深度 判断是否是平衡二叉树 ```java public boolean isBalanced(TreeNode root) { if (root == null) return true; return Math.abs(depth(root.left..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-04T15:12:04.000Z"}],["meta",{"property":"article:author","content":"zhiyu1998"}],["meta",{"property":"article:modified_time","content":"2023-04-04T15:12:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"力扣链表专题常用方法封装\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-04T15:12:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"zhiyu1998\\",\\"url\\":\\"https://github.com/zhiyu1998\\"}]}"]]},"headers":[{"level":2,"title":"快慢指针找中间位置","slug":"快慢指针找中间位置","link":"#快慢指针找中间位置","children":[]},{"level":2,"title":"反转链表","slug":"反转链表","link":"#反转链表","children":[]},{"level":2,"title":"后序遍历","slug":"后序遍历","link":"#后序遍历","children":[]},{"level":2,"title":"计算最大深度","slug":"计算最大深度","link":"#计算最大深度","children":[]},{"level":2,"title":"判断是否是平衡二叉树","slug":"判断是否是平衡二叉树","link":"#判断是否是平衡二叉树","children":[]},{"level":2,"title":"如果要用HashMap统计个数","slug":"如果要用hashmap统计个数","link":"#如果要用hashmap统计个数","children":[]}],"git":{"createdTime":1680621124000,"updatedTime":1680621124000,"contributors":[{"name":"RrOrange","email":"542716863@qq.com","commits":1}]},"readingTime":{"minutes":0.77,"words":230},"filePathRelative":"Java/leetcode/剑指offer/常用方法封装合集.md","localizedDate":"2023年4月4日","autoDesc":true}');export{e as data};
